{"version":3,"sources":["components/note.js","components/notification.js","services/notes.js","components/footer.js","app.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","id","content","onClick","Notification","message","services_notes","request","axios","get","nonExisting","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","console","log","noteService","length","handleToggleImportance","e","target","parentNode","find","item","changedNote","objectSpread","updatedNote","map","catch","err","setTimeout","filter","notification","components_note","key","onSubmit","preventDefault","noteObject","Date","toISOString","Math","random","addedNote","value","onChange","type","footer","ReactDOM","render","app","document","getElementById"],"mappings":"6MAceA,EAZF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBACdC,EAAQF,EAAKG,UAAL,4BACd,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOC,GAAIR,EAAKQ,IAC3BR,EAAKS,QACNL,EAAAC,EAAAC,cAAA,UAAQI,QAAST,GAAmBC,MCE7BS,EARM,SAAAZ,GAAiB,IAAda,EAAcb,EAAda,QACtB,OAAgB,OAAZA,EACK,KAGFR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASK,oBCkBlBC,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBT,GAAI,IACJC,QAAS,mCACTS,KAAM,2BACNf,WAAW,GAEb,OAAOW,EAAQK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOL,MAaxCJ,EAVA,SAAAU,GAEb,OADgBR,IAAMS,KAdR,aAcsBD,GACrBJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BR,EALA,SAACL,EAAIe,GAElB,OADgBR,IAAMU,IAAN,GAAAH,OAnBF,aAmBE,KAAAA,OAAwBd,GAAMe,GAC/BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCH5BK,EAjBA,WAOb,OACEtB,EAAAC,EAAAC,cAAA,OAAKqB,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qFC2ESyB,EAjFH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,sBAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAAAG,EAIwBd,mBAAS,MAJjCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAITE,EAJSD,EAAA,GAIKE,EAJLF,EAAA,GAWhBG,oBALa,WACXC,QAAQC,IAAI,yBACZC,IAAqBnC,KAAK,SAAAkB,GAAK,OAAIC,EAASD,MAG9B,IAEhBe,QAAQC,IAAI,WAAYhB,EAAMkB,OAAQ,SAEtC,IAAMC,EAAyB,SAAAC,GAC7B,IAAMjD,EAAKiD,EAAEC,OAAOC,WAAWnD,GACzBR,EAAOqC,EAAMuB,KAAK,SAAAC,GAAI,OAAIA,EAAKrD,KAAOA,IACtCsD,EAAW3B,OAAA4B,EAAA,EAAA5B,CAAA,GAAQnC,EAAR,CAAcG,WAAYH,EAAKG,YAChDmD,EACU9C,EAAIsD,GACX3C,KAAK,SAAA6C,GACJ1B,EAASD,EAAM4B,IAAI,SAAAjE,GAAI,OAAKA,EAAKQ,KAAOA,EAAKR,EAAOgE,OAErDE,MAAM,SAAAC,GACLjB,EAAe,SAAA5B,OACJtB,EAAKS,QADD,sCAGf2D,WAAW,WACTlB,EAAgB,OACf,KACHZ,EAASD,EAAMgC,OAAO,SAAArE,GAAI,OAAIA,EAAKQ,KAAOA,QAiChD,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACgE,EAAD,CAAc1D,QAASqC,IACvB7C,EAAAC,EAAAC,cAAA,WAhCkBuC,EAAUR,EAAQA,EAAMgC,OAAO,SAAAR,GAAI,OAAIA,EAAK1D,aAC3C8D,IAAI,SAAAjE,GAAI,OAC3BI,EAAAC,EAAAC,cAACiE,EAAD,CACEC,IAAKxE,EAAKQ,GACVR,KAAMA,EACNC,iBAAkBuD,OA4BpBpD,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAMoC,GAAYD,KAAnC,QACQA,EAAU,YAAc,OAEhCzC,EAAAC,EAAAC,cAAA,QAAMmE,SA1BM,SAAAhB,GACdA,EAAEiB,iBACFtB,QAAQC,IAAI,cAAeI,EAAEC,QAC7B,IAAMiB,EAAa,CACjBlE,QAASgC,EACTvB,MAAM,IAAI0D,MAAOC,cACjB1E,UAAW2E,KAAKC,SAAW,IAE7BzB,EAAmBqB,GAAYxD,KAAK,SAAA6D,GAClC1C,EAASD,EAAMf,OAAO0D,MAExBtC,EAAW,MAgBPtC,EAAAC,EAAAC,cAAA,SAAO2E,MAAOxC,EAASyC,SAbJ,SAAAzB,GACvBf,EAAWe,EAAEC,OAAOuB,UAahB7E,EAAAC,EAAAC,cAAA,UAAQ6E,KAAK,UAAb,SAEF/E,EAAAC,EAAAC,cAAC8E,EAAD,cC5ENC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9d7ed1bf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? `important` : `not important`;\r\n  return (\r\n    <div>\r\n      <li className=\"note\" id={note.id}>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: \"This note is not saved to server\",\r\n    date: \"2019-05-30T17:30:31.098Z\",\r\n    important: true\r\n  };\r\n  return request.then(response => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2019\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/note\";\r\nimport Notification from \"./components/notification\";\r\nimport noteService from \"./services/notes\";\r\nimport Footer from \"./components/footer\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"This is a new note\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const hook = () => {\r\n    console.log(\"stepped inside effect\");\r\n    noteService.getAll().then(notes => setNotes(notes));\r\n  };\r\n\r\n  useEffect(hook, []);\r\n\r\n  console.log(\"rendered\", notes.length, \"notes\");\r\n\r\n  const handleToggleImportance = e => {\r\n    const id = e.target.parentNode.id;\r\n    const note = notes.find(item => item.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(updatedNote => {\r\n        setNotes(notes.map(note => (note.id !== id ? note : updatedNote)));\r\n      })\r\n      .catch(err => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter(note => note.id !== id));\r\n      });\r\n  };\r\n\r\n  const rows = () => {\r\n    let notesToRender = showAll ? notes : notes.filter(item => item.important);\r\n    return notesToRender.map(note => (\r\n      <Note\r\n        key={note.id}\r\n        note={note}\r\n        toggleImportance={handleToggleImportance}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const addNote = e => {\r\n    e.preventDefault();\r\n    console.log(\"btn clicked\", e.target);\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    };\r\n    noteService.create(noteObject).then(addedNote => {\r\n      setNotes(notes.concat(addedNote));\r\n    });\r\n    setNewNote(\"\");\r\n  };\r\n\r\n  const handleNoteChange = e => {\r\n    setNewNote(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <ul>{rows()}</ul>\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n        show {showAll ? \"important\" : \"all\"}\r\n      </button>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\n// import axios from \"axios\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// let a = Date.now();\n// axios.get(\"http://localhost:3001/notes\").then(response => {\n//   console.log((Date.now() - a) / 1000 + \"s\");\n//   const notes = response.data;\n//   console.log(response);\n\n// });\n"],"sourceRoot":""}